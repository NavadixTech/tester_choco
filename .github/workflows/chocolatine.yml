name: Chocolatine CI

on:
  push:
    branches-ignore:
      - ga-ignore-*
  pull_request:
    branches-ignore:
      - ga-ignore-*

env:
  MIRROR_URL: "git@github.com:EpitechPGEPromo2029/B-DOP-200-MLN-2-1-chocolatine-sacha.lamour.git"
  EXECUTABLES: "my_radar"

jobs:
  check_coding_style:
    name: Check Coding Style
    runs-on: ubuntu-latest
    continue-on-error: false
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Coding Style Check
        run: check.sh $(pwd) $(pwd)

      - name: Display Errors
        if: failure()
        run: cat coding-style-reports.log && exit 1

  check_program_compilation:
    name: Check Compilation
    runs-on: ubuntu-latest
    continue-on-error: false
    container:
      image: epitechcontent/epitest-docker
    needs: check_coding_style
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Compile Project
        run: timeout 120 make

      - name: Clean Project
        run: make clean

      - name: Verify Executables
        run: |
          for exe in $(echo "$EXECUTABLES" | tr ',' ' '); do
            if [ ! -x "$exe" ]; then
              echo "Executable $exe not found or not executable" && exit 1
            fi
          done

  run_tests:
    name: Run Tests
    runs-on: ubuntu-latest
    continue-on-error: false
    container:
      image: epitechcontent/epitest-docker
    needs: check_program_compilation
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Tests
        run: timeout 120 make tests_run

  push_to_mirror:
    name: Push to Mirror
    runs-on: ubuntu-latest
    needs: run_tests
    continue-on-error: false
    if: github.event_name == 'push'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Vérifier si la branche est protégée
        run: |
          PROTECTED=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/EpitechPGEPromo2029/B-DOP-200-MLN-2-1-chocolatine-sacha.lamour/branches/main | jq -r '.protected')
          
          if [ "$PROTECTED" == "true" ]; then
            echo "La branche main est protégée, un push direct est impossible."
            exit 1
          fi

      - name: Configurer le dépôt distant
        run: |
          git remote add mirror https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/EpitechPGEPromo2029/B-DOP-200-MLN-2-1-chocolatine-sacha.lamour.git
          git fetch mirror main || echo "Pas de branche main existante sur le repo distant"

      - name: Push sécurisé vers le miroir
        run: |
          git push mirror main || (echo "Tentative de push forcé sur repo vide..." && git push --force mirror main)

      - name: Créer une Pull Request si la branche est protégée
        if: failure()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_TOKEN }}
          branch: main
          title: "Automated Sync - Chocolatine CI"
